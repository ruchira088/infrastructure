---
- hosts: localhost
  connection: local

  vars:
    k8s_config_file: ~/.kube/config

  tasks:
    - name: Execute terraform plan
      terraform:
        project_path: ./terraform
        force_init: yes

    - name: Create output directories
      block:
        - file:
            path: output
            state: directory
        - file:
            path: output/cluster-issuer
            state: directory
        - file:
            path: output/dashboard
            state: directory

    - name: Setup Cert Manager in K8s
      block:
        - name: Install Cert Manager
          command: |
            kubectl apply \
              -f https://github.com/jetstack/cert-manager/releases/download/v1.4.0/cert-manager.yaml \
              --kubeconfig {{ k8s_config_file }}

        - name: Delete Cert Manager web hooks
          block:
            - name: Delete mutating webhook
              command: |
                kubectl delete \
                  mutatingwebhookconfiguration.admissionregistration.k8s.io cert-manager-webhook \
                  --kubeconfig {{ k8s_config_file }}

            - name: Delete validating webhook
              command: |
                kubectl delete \
                   validatingwebhookconfigurations.admissionregistration.k8s.io cert-manager-webhook \
                   --kubeconfig {{ k8s_config_file }}

        - name: Render K8s resource files
          template:
            src: "{{ item }}"
            dest: output/cluster-issuer/{{ item | basename }}
          with_fileglob:
            - k8s-resource-files/cluster-issuer/*.yaml
          vars:
            aws_access_key_id: "{{ lookup('aws_ssm', '/k8s/cert-manager/access-key-id', region='ap-southeast-2') }}"
            aws_secret_access_key: "{{ lookup('aws_ssm', '/k8s/cert-manager/secret-access-key', region='ap-southeast-2') }}"

        - name: Apply K8s resource files
          command: kubectl apply -f output/cluster-issuer --kubeconfig {{ k8s_config_file }}

    - name: Add Ingress to the K8s dashboard
      block:
        - name: Render K8s resource files
          template:
            src: "{{ item }}"
            dest: output/dashboard/{{ item | basename }}
          with_fileglob:
            - k8s-resource-files/dashboard/*.yaml
          vars:
            k8s_dashboard_host_name: k8s-dashboard.home.ruchij.com

        - name: Apply K8s resource files
          command: kubectl apply -f output/dashboard --kubeconfig {{ k8s_config_file }}
